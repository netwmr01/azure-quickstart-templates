{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "adminUserName": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin user name for the VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the VMs (A mix of upper and lower-case characters, digits and symbols)"
      }
    },
    "dirUsername": {
      "type": "string",
      "defaultValue": "diradmin",
      "metadata": {
        "description": "User name for the Cloudera Director Server"
      }
    },
    "dirPassword": {
      "type": "securestring",
      "metadata": {
        "description": "password for the Cloudera Director (A mix of upper and lower-case characters, digits and symbols)"
      }
    },

    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS name where the VMs will be exposed"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The type of the Storage Account to be created (Default to Standard_LRS)"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "clouderavnet",
      "metadata": {
        "description": "The name of the virtual network provisioned for the deployment"
      }
    },
    "vnetNewOrExisting" : {
      "type" : "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicator for new or exiting Virtual Network"
      }
    },
    "virtualNetworkRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group Name for Vnet. For new VNet leave it empty, otherwise type in existing resource group name"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "clouderasubnet",
      "metadata": {
        "description": "Subnet name for the virtual network where resources will be provisioned"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.3.0.0/16",
      "metadata": {
        "description": "Virtual Network address CIDR"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.3.0.0/16",
      "metadata": {
        "description": "CIDR for the subnet where VMs will be placed"
      }
    },
    "directorServerIPAddress": {
      "type": "string",
      "defaultValue": "10.3.0.4",
      "metadata": {
        "description": "IP address for the director server"
      }
    },
    "dnsServerIPAddress": {
      "type": "array",
      "defaultValue": ["10.3.0.5"],
      "metadata": {
        "description": "IP address for the dns server"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D3",
      "metadata": {
        "description": "The size of the VMs deployed for Director server and DNS server"
      }
    },
    "company": {
      "type": "string",
      "defaultValue": "Company",
      "metadata": {
        "description": "Your Company"
      }
    },
    "emailAddress": {
      "type": "string",
      "defaultValue": "email@yourcompany.com",
      "metadata": {
        "description": "your email"
      }
    },
    "businessPhone": {
      "type": "string",
      "defaultValue": "123456789",
      "metadata": {
        "description": "your business phone number"
      }
    },
    "firstName": {
      "type": "string",
      "defaultValue": "FirstName",
      "metadata": {
        "description": "Your FirstName"
      }
    },
    "lastName": {
      "type": "string",
      "defaultValue": "LastName",
      "metadata": {
        "description": "Your LastName"
      }
    },
    "jobRole": {
      "type": "string",
      "defaultValue": "Administrator",
      "metadata": {
        "description": "Job Role"
      },
      "allowedValues": [
        "Administrator",
        "Analyst (Industry/Finance)",
        "Analyst (Technical)",
        "Architect",
        "C level",
        "Consultant",
        "Developer",
        "Director",
        "Engineer",
        "Individual contributor",
        "Manager",
        "Partner",
        "Student",
        "VP"
      ]
    },
    "jobFunction": {
      "type": "string",
      "defaultValue": "Analytics / Business Intelligence",
      "metadata": {
        "description": "Job Function"
      },
      "allowedValues": [
        "Analytics / Business Intelligence",
        "Big Data / Architecture",
        "Data Warehouse / Management",
        "Data Science",
        "Database",
        "ETL / ELT",
        "Infrastructure",
        "IT",
        "Marketing / Sales",
        "Networking",
        "Manager",
        "Security / Compliance",
        "Storage"
      ]
    }
  },
  "variables": {
    "templateAPIVersion":"2015-11-01",
    "resourceAPIVersion":"2015-06-15",
    "addressPrefix":"[parameters('addressPrefix')]",
    "subnetPrefix":"[parameters('subnetPrefix')]",
    "scriptsUri": "https://raw.githubusercontent.com/netwmr01/azure-quickstart-templates/director_server_dns/cloudera-on-centos",
    "share-resourcesUri": "[concat(variables('scriptsUri'), '/shared-resources-', parameters('vnetNewOrExisting'), '-vnet.json')]",
    "storageAccount": {
      "prefix": "[concat(uniquestring(resourceGroup().id),'storage')]",
      "type": "[parameters('storageAccountType')]"
    },
    "vmSpec": {
      "vmSize": "[parameters('vmSize')]",
      "adminUserName": "[parameters('adminUserName')]",
      "adminPassword": "[parameters('adminPassword')]",
      "asName": "[concat(parameters('dnsNamePrefix'), '-as')]"
    },
    "networkSpec": {
      "addressPrefix": "[variables('addressPrefix')]",
      "subnetPrefix": "[variables('subnetPrefix')]",
      "directorServerIPAddress":"[parameters('directorServerIPAddress')]",
      "dnsServerIPAddress":"[parameters('dnsServerIPAddress')]",
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "virtualNetworkRGName":"[parameters('virtualNetworkRGName')]",
      "vnetNewOrExisting": "[parameters('vnetNewOrExisting')]",
      "virtualNetworkSubnetName": "[parameters('subnetName')]"
    },
    "newVNetId":"[resourceId(concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
    "existingVNetId":"[resourceId(parameters('virtualNetworkRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
    "VNetId": "[variables(concat(parameters('vnetNewOrExisting'),'VNetId'))]"
  },
  "resources": [
    {
      "name": "shared-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('share-resourcesUri')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "resourceAPIVersion":{
            "value":"[variables('resourceAPIVersion')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          },
          "asName": {
            "value": "[variables('vmSpec').asName]"
          }
        }
      }
    },
    {
      "name": "director-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/shared-resources"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/director-node.json')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "vnetID":{
            "value":"[variables('VNetId')]"
          },
          "resourceAPIVersion":{
            "value":"[variables('resourceAPIVersion')]"
          },
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "scriptsUri": {
            "value": "[variables('scriptsUri')]"
          },
          "storageAccount": {
            "value": "[variables('storageAccount')]"
          },
          "vmSpec": {
            "value": "[variables('vmSpec')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          }
        }
      }
    },
    {
      "name": "dns-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/shared-resources"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/dns-node.json')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "vnetID":{
            "value":"[variables('VNetId')]"
          },
          "resourceAPIVersion":{
            "value":"[variables('resourceAPIVersion')]"
          },
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "scriptsUri": {
            "value": "[variables('scriptsUri')]"
          },
          "storageAccount": {
            "value": "[variables('storageAccount')]"
          },
          "vmSpec": {
            "value": "[variables('vmSpec')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          }
        }
      }
    }
  ]
}